import numpy as np
import sys
import ase.io
from pathlib import Path
from tqdm import tqdm
import seaborn as sns
sns.set_style('darkgrid')
import matplotlib.pyplot as plt

def evaluate(file,ebins=50,fbins=50,vbins=10, stress = False):
    f = Path(file)
    format = 'vasp-xml' if f.suffix == '.xml' else 'extxyz'

    atom = ase.io.read(f,format=format,index=':')
    nstructs = len(atom)
    volumes = np.zeros(nstructs)
    energies = np.zeros(nstructs)
    forces = []

    for i in tqdm(range(nstructs)):
        atoms = atom[i]
        nat = atoms.get_number_of_atoms()
        forces = np.concatenate([forces,atoms.get_forces().flatten()])
        energies[i] = atoms.get_total_energy()/nat
        volumes[i] = atoms.get_volume()

    forces = np.array(forces)
    fig, ax = plt.subplots(1,3,figsize=(16,8))
    ax[0].hist(energies,bins=ebins, color='blue',label='DFT')
    ax[0].legend()
    ax[0].set_xlim(np.min(energies),np.max(energies))
    ax[0].set_xlabel('Energies (eV/atom)',weight='bold',fontsize=14)
    ax[1].hist(forces,bins=fbins)
    ax[1].set_xlabel('Forces (eV/$\AA$)',weight='bold',fontsize=14)
    ax[2].hist(volumes,bins=vbins)
    ax[2].set_xlabel('Volumes ($\AA^3$)',weight='bold',fontsize=14)
    fig.suptitle('Sampling overview for ' + file,weight='bold',fontsize=18)
    plt.show()


evaluate(sys.argv[1])
